function [y1] = myNeuralNetworkFunction(x1)
%MYNEURALNETWORKFUNCTION neural network simulation function.
%
% Generated by Neural Network Toolbox function genFunction, 18-Dec-2020 13:31:49.
%
% [y1] = myNeuralNetworkFunction(x1) takes these arguments:
%   x = 5xQ matrix, input #1
% and returns:
%   y = 2xQ matrix, output #1
% where Q is the number of samples.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [-1;-1;-1;-1;-1];
x1_step1.gain = [1;1;1;1;1];
x1_step1.ymin = -1;

% Layer 1
b1 = [-2.5123827984605706654;2.3791742803146540552;2.413242336929430909;-1.7729151587740357154;2.7223562436893025129;-0.52612629233486540858;-1.4094851016850706849;0.10095591241258905502;-0.61872179776772151527;0.64043808554803749455;1.7613485815506220167;1.1278060299801226929;0.86360759254165353482;1.3485850187446737358;1.3189557282080186518;2.3665567077920943717;-2.3084070118174730979;-2.600288937214304319];
IW1_1 = [0.81445430453270806215 0.97058333085538239793 -0.1069044707321155363 2.0540455078237536135 0.33541967801311489694;-1.7655459877162336113 0.059557643507696003682 1.3193669285225975152 0.91935064199377425354 -0.70135863472147697006;-1.8284168437541716834 -0.31558736246732155273 -0.234741685400859601 1.2267766962763018146 0.022181156256249400655;0.49060942281899899697 1.6101196721910713272 1.8119293508919660507 -0.17161206779212057061 0.3396327467284465107;-0.12434902544691872617 1.2655398894439864321 2.6330269462566393557 1.2149198357990624864 3.4198412422464552485;0.67079241998896821375 1.7803823730540606629 0.83503644820100397794 0.46785864576268976212 0.17433596122821701235;1.1786659594002621976 -1.3996512557957556666 -0.037336528722498221744 -0.85095463348502398127 -1.9930714449018700485;-2.0617305249188100369 0.21224737396374454557 -0.27356482212319721548 -0.45569875728449632524 0.88400289049887359472;1.560664515842277833 1.4218243378912645003 -0.79373331871733487919 -0.48698541565978020751 -0.47904769063886565306;0.91601702378475879929 0.6940279870858189204 0.80538183668216123401 0.99633227441423577453 -0.40776664958903413583;-0.037177125774794594903 0.86232881222190427284 1.7274704644514367047 -1.3507110759286726775 -1.2398402318630026286;0.91720524353195576062 -0.34366442478951741979 1.2299546584237344149 0.92916846063760938357 0.93982426403837204809;2.1368925711963191461 0.75478143077568504715 0.379304993579090588 1.652034359890498072 -0.76188564251297286045;-0.28444014861026084562 -2.6713519813823434212 0.39754933209451098763 -0.82562954451131898015 -1.1783790845046160367;1.3174278422705480995 -0.51745274957176912167 -1.9386523653578759951 0.47901248464249096548 -0.91264280222426286127;0.68921968218711127108 1.3392825361006974738 1.9436057222783154064 1.153319173721638391 0.12436502162115585512;-0.93009727128293795406 2.0079846844018880425 -0.49597135251207874473 1.2892251993373051722 0.25623185153189714791;-0.5084135529045714641 1.8542025945739399884 -2.1233229584859323325 0.3970682103303165289 0.10127248395313631635];

% Layer 2
b2 = [0.5271603883906434973;1.3837020691333357103];
LW2_1 = [0.21467125605313336356 0.064089157334174223779 0.49339682829893832805 -0.02437925847447003358 -0.37495856352250800381 -0.017643481882903693653 -0.23519939105262605006 -1.0222080771762513951 -0.23979154777591993319 0.11827077230593316393 0.57187906287042167275 0.0096069838124309588079 -0.62044161747797810236 -0.29889932144474740117 0.071733956645790644679 -0.43241209038909933504 0.97293421310522842926 -0.69430656774594301517;0.10158008007381692794 0.67562872566648679573 0.16845251374454706106 0.765578556758586104 -3.1181796103895811356 -1.2258090148537721387 -0.99129574213310311936 -0.61602672933716817738 0.22731740253354079662 0.86098327884616887573 0.3032596707544800152 0.11356607585679190375 -0.37283173031284999599 -0.83469167160379365011 -0.12496494739490145165 0.93842666800747509548 -0.60979559379939929364 0.37850196259573970492];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = [12.9503891668609;2.41912986851123];
y1_step1.xoffset = [-0.0866509557753827;-0.173057007325549];

% ===== SIMULATION ========

% Dimensions
Q = size(x1,2); % samples

% Input 1
xp1 = mapminmax_apply(x1,x1_step1);

% Layer 1
a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*xp1);

% Layer 2
a2 = repmat(b2,1,Q) + LW2_1*a1;

% Output 1
y1 = mapminmax_reverse(a2,y1_step1);
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
y = bsxfun(@minus,x,settings.xoffset);
y = bsxfun(@times,y,settings.gain);
y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
x = bsxfun(@minus,y,settings.ymin);
x = bsxfun(@rdivide,x,settings.gain);
x = bsxfun(@plus,x,settings.xoffset);
end
